type Category {
  id: String!
  name: String!
}

type Tag {
  id: String!
  name: String!
  category: Category!
}

# fragment TagFragment on Tag {
#   id: id
#   name
#   category
# }

type Thing {
  id: String!
  name: String!
  description: String!
  tags: [Tag!]!
  category: Category!
}

type Query {
  categories: [Category!]!
  category(categoryId: String!): Category!
  tagsByCategory(categoryId: String!): [Tag!]!
  tags: [Tag!]!
  things: [Thing!]!
}

type Mutation {
  createTag(category: String!, name: String!): Tag!
  createThing(name: String!, description: String!, tags: [String!]!, category: String!): Thing!
  createCategory(name: String!): Category!
  updateThing(id: String!, name: String!, description: String!, tags: [String!]!, category: String!): Thing!
  deleteThing(id: String!): String!
}

schema {
  query: Query
  mutation: Mutation
}
